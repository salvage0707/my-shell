#!/bin/bash

# 参考リンク

# インポート
source $MY_SHELL_ROOT_PATH/setting/import
import git/get_projects
import print_text

# =======================================================
#【 選択形式のセレクトメニュー】
# 
#   @return なし
# 
# [説明]
#   直下ディレクトリのGitプロジェクトを最新に更新
#
# [使い方]
#   ```
#   read_select_num_res 0 100
#   ```
# =======================================================


info "ブランチを作成します"
info "対象プロジェクト一覧"
get_projects
echo ${get_projects_res[@]}

info "ベースブランチ名を入力してください"
	echo "  m              => master"
	echo "  d              => develop"
	echo "  [a-zA-Z0-9/_#] => 入力ブランチ"
	echo "  no text        => 更新なし"
	echo "  exit           => 処理を終了"
	new_line

# 変数
target_projects=()
base_branches=()
issue_numbers=()

# プレフィックス
prefix="issues/"

printf "サフィックス  : "
read sufix

for project in ${get_projects_res[@]}; do
	info $project

	# 入力受付
	printf "ブランチ名: "
	read answer_branch
	
	branch=""
	case $answer_branch in
        "m") 
            branch="master"
            ;;

        "d")
            branch="develop"
            ;;

        "exit")
            error "処理を終了しました"
            exit
            ;;

        [a-zA-Z0-9/_#]*) 
            branch=$answer_branch
            ;;

        * ) 
            echo "更新なし"
            continue
            ;;
    esac

    # 入力受付
    while true 
    do
        printf "issue番号: "
        read answer_issue_num
        
        issue_num=""
        case $answer_issue_num in
            [0-9]*) 
                issue_num=$answer_issue_num
                break
                ;;

            * ) 
                echo "再度入力してください"
                continue
                ;;
        esac
    done
    
    # 最新化
    target_projects=("${target_projects[@]}" $project)
    base_branches=("${target_branches[@]}" $branch)
    issue_numbers=("${issue_numbers[@]}" $issue_num)
done

# 最終確認
red "最新化しますか? (y/n): "
read tmp
if [ $tmp != "y" ]; then
	error "処理を終了しました"
	exit
fi

# 最新化
array_last_num=`expr ${#target_projects[@]} - 1`
for index in $(seq 0 ${array_last_num}); do

    p=${target_projects[index]}
    b=${base_branches[index]}
    i=${issue_numbers[index]}

    info "-----------------------------------------"
    echo "プロジェクト  : "$p
    echo "ベースブランチ: "$b
    echo "issue番号    : "$i
    
    git -C $p checkout $b
    git -C $p pull origin $b
    git -C $p checkout -b $prefix$i$sufix

    new_line
done
